import shlex
import subprocess
import os

class CommandHandler:
    def __init__(self, commands_config, tts_engine, avatar_client):
        # –¢–µ–ø–µ—Ä –º–∏ –ø—Ä–∏–π–º–∞—î–º–æ –ª–∏—à–µ –æ–¥–∏–Ω —Å–ª–æ–≤–Ω–∏–∫ –∑ —É—Å—ñ–º–∞ –∫–æ–º–∞–Ω–¥–∞–º–∏
        self.commands = {k.lower(): v for k, v in commands_config.items()}
        self.tts = tts_engine
        self.avatar = avatar_client
        print(f"üéØ CommandHandler: {len(self.commands)} total commands loaded.")

    def handle(self, text: str) -> bool:
        """
        –û–±—Ä–æ–±–ª—è—î –≤—Ö—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç, —à—É–∫–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –∫–æ–º–∞–Ω–¥—É —Ç–∞ –≤–∏–∫–æ–Ω—É—î –≤—Å—ñ –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ –Ω–µ—é –¥—ñ—ó.
        """
        text = text.lower().strip()

        # –Ñ–¥–∏–Ω–∏–π —Ü–∏–∫–ª –¥–ª—è –≤—Å—ñ—Ö –∫–æ–º–∞–Ω–¥
        for phrase, actions in self.commands.items():
            if phrase in text:
                print(f"‚úÖ Found command: '{phrase}'")

                # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –º–æ–∂–ª–∏–≤—ñ –¥—ñ—ó –∑ –∫–æ–Ω—Ñ—ñ–≥—É
                program_to_run = actions.get("program")
                expression_to_show = actions.get("expression")
                motion_to_play = actions.get("motion")
                text_to_speak = actions.get("speak")

                # 1. –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
                if program_to_run:
                    print(f"  ‚Üí Running program: {program_to_run}")
                    self._run_program(program_to_run)

                # 2. –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤–∏—Ä–∞–∑—É –∞–≤–∞—Ç–∞—Ä—É
                if expression_to_show:
                    print(f"  ‚Üí Sending expression: {expression_to_show}")
                    self.avatar.send_expression(expression_to_show)

                # 3. –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∞–≤–∞—Ç–∞—Ä—É
                if motion_to_play:
                    print(f"  ‚Üí Sending motion: {motion_to_play}")
                    self.avatar.send_motion(motion_to_play)

                # 4. –û–∑–≤—É—á–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
                if text_to_speak:
                    print(f"  ‚Üí Speaking: '{text_to_speak}'")
                    self.tts.speak(text_to_speak)

                return True # –ö–æ–º–∞–Ω–¥—É –∑–Ω–∞–π–¥–µ–Ω–æ —Ç–∞ –æ–±—Ä–æ–±–ª–µ–Ω–æ, –≤–∏—Ö–æ–¥–∏–º–æ

        # –Ø–∫—â–æ –∂–æ–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ False
        # –¶–µ –¥–æ–∑–≤–æ–ª–∏—Ç—å –ø–µ—Ä–µ–¥–∞—Ç–∏ —Ç–µ–∫—Å—Ç –¥–æ LLM —É main.py
        return False

    def _run_program(self, program_path):
        """–ó–∞–ø—É—Å–∫–∞—î –∑–æ–≤–Ω—ñ—à–Ω—é –ø—Ä–æ–≥—Ä–∞–º—É."""
        try:
            # Popen —î –Ω–µ–±–ª–æ–∫—É—é—á–∏–º, —â–æ —ñ–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞
            subprocess.Popen([program_path], shell=False)
        except Exception as e:
            print(f"‚ùå Error launching program '{program_path}': {e}")